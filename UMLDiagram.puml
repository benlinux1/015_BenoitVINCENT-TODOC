@startuml
class com.cleanup.todoc.ui.TaskViewModel {
- LiveData<List<Task>> currentTasks
- TaskDataRepository taskDataSource
- ProjectDataRepository projectDataSource
- Executor executor
+ void init()
+ LiveData<List<Project>> getProjects()
+ LiveData<List<Task>> getTasks()
+ LiveData<Project> getProject(long)
+ void createTask(Task)
+ void deleteTask(long)
}
class com.cleanup.todoc.repositories.ProjectDataRepository {
- ProjectDao projectDao
+ LiveData<List<Project>> getProjects()
+ void createProject(Project)
+ void deleteProject(long)
+ LiveData<Project> getProject(long)
}
class com.cleanup.todoc.repositories.TaskDataRepository {
- TaskDao taskDao
+ LiveData<List<Task>> getTasks()
+ LiveData<Task> getTask(long)
+ void createTask(Task)
+ void deleteTask(long)
}
interface com.cleanup.todoc.database.dao.ProjectDao {
~ LiveData<List<Project>> getProjects()
~ LiveData<Project> getProject(long)
~ Cursor getProjectWithCursor(long)
~ long createProject(Project)
~ int deleteProject(long)
}
class com.cleanup.todoc.model.Project {
- long id
- String name
- int color
+ {static} Project[] getAllProjects()
+ {static} Project getProjectById(long)
+ long getId()
+ String getName()
+ int getColor()
+ String toString()
}
class com.cleanup.todoc.ui.TasksAdapter {
- List<Task> tasks
- List<Project> projects
- DeleteTaskListener deleteTaskListener
~ void updateTasks(List<Task>)
~ void updateProjects(List<Project>)
+ TaskViewHolder onCreateViewHolder(ViewGroup,int)
+ void onBindViewHolder(TaskViewHolder,int)
+ int getItemCount()
}
interface com.cleanup.todoc.ui.TasksAdapter.DeleteTaskListener {
~ void onDeleteTask(Task)
}
class com.cleanup.todoc.ui.TasksAdapter.TaskViewHolder {
- AppCompatImageView imgProject
- TextView lblTaskName
- TextView lblProjectName
- AppCompatImageView imgDelete
- DeleteTaskListener deleteTaskListener
~ Project getTaskProject(Task,List<Project>)
~ void bind(Task)
}
class com.cleanup.todoc.model.Task {
- long id
- long projectId
- String name
- long creationTimestamp
+ long getId()
- void setId(long)
- void setProjectId(long)
+ Project getProject()
+ long getProjectId()
+ String getName()
- void setName(String)
+ long getCreationTimestamp()
- void setCreationTimestamp(long)
}
class com.cleanup.todoc.model.Task.TaskAZComparator {
+ int compare(Task,Task)
}
class com.cleanup.todoc.model.Task.TaskZAComparator {
+ int compare(Task,Task)
}
class com.cleanup.todoc.model.Task.TaskRecentComparator {
+ int compare(Task,Task)
}
class com.cleanup.todoc.model.Task.TaskOldComparator {
+ int compare(Task,Task)
}
class com.cleanup.todoc.ui.MainActivity {
- ArrayList<Task> tasks
- TasksAdapter adapter
- SortMethod sortMethod
+ AlertDialog dialog
- EditText dialogEditText
- Spinner dialogSpinner
- RecyclerView listTasks
- TextView lblNoTasks
- TaskViewModel taskViewModel
+ void onCreate(Bundle)
+ boolean onCreateOptionsMenu(Menu)
+ boolean onOptionsItemSelected(MenuItem)
- void configureViewModel()
- void getTasks()
- void getProjects()
+ void onDeleteTask(Task)
- void onPositiveButtonClick(DialogInterface)
- void showAddTaskDialog()
- void addTask(Task)
- void updateTasks(List<Task>)
- void updateProjects(List<Project>)
- AlertDialog getAddTaskDialog()
- void populateDialogSpinner()
}
enum com.cleanup.todoc.ui.SortMethod {
+  ALPHABETICAL
+  ALPHABETICAL_INVERTED
+  RECENT_FIRST
+  OLD_FIRST
+  NONE
}
interface com.cleanup.todoc.database.dao.TaskDao {
~ LiveData<List<Task>> getTasks()
~ LiveData<Task> getTask(long)
~ LiveData<List<Task>> getTasksByProjectId(long)
~ Cursor getTasksWithCursor(long)
~ long createTask(Task)
~ int deleteTask(long)
}
class com.cleanup.todoc.injections.ViewModelFactory {
- TaskDataRepository taskDataSource
- ProjectDataRepository projectDataSource
- Executor executor
- {static} ViewModelFactory factory
+ {static} ViewModelFactory getInstance(Context)
+ T create(Class<T>)
}
abstract class com.cleanup.todoc.database.dao.TodocDatabase {
- {static} TodocDatabase INSTANCE
+ {abstract}TaskDao taskDao()
+ {abstract}ProjectDao projectDao()
+ {static} TodocDatabase getInstance(Context)
- {static} Callback prepopulateDatabase()
}


androidx.lifecycle.ViewModel <|-- com.cleanup.todoc.ui.TaskViewModel
com.cleanup.todoc.ui.Adapter <|-- com.cleanup.todoc.ui.TasksAdapter
com.cleanup.todoc.ui.TasksAdapter +.. com.cleanup.todoc.ui.TasksAdapter.DeleteTaskListener
com.cleanup.todoc.ui.TasksAdapter +.. com.cleanup.todoc.ui.TasksAdapter.TaskViewHolder
com.cleanup.todoc.ui.ViewHolder <|-- com.cleanup.todoc.ui.TasksAdapter.TaskViewHolder
com.cleanup.todoc.model.Task +.. com.cleanup.todoc.model.Task.TaskAZComparator
com.cleanup.todoc.model.Comparator <|.. com.cleanup.todoc.model.Task.TaskAZComparator
com.cleanup.todoc.model.Task +.. com.cleanup.todoc.model.Task.TaskZAComparator
com.cleanup.todoc.model.Comparator <|.. com.cleanup.todoc.model.Task.TaskZAComparator
com.cleanup.todoc.model.Task +.. com.cleanup.todoc.model.Task.TaskRecentComparator
com.cleanup.todoc.model.Comparator <|.. com.cleanup.todoc.model.Task.TaskRecentComparator
com.cleanup.todoc.model.Task +.. com.cleanup.todoc.model.Task.TaskOldComparator
com.cleanup.todoc.model.Comparator <|.. com.cleanup.todoc.model.Task.TaskOldComparator
com.cleanup.todoc.ui.DeleteTaskListener <|.. com.cleanup.todoc.ui.MainActivity
androidx.appcompat.app.AppCompatActivity <|-- com.cleanup.todoc.ui.MainActivity
com.cleanup.todoc.injections.Factory <|.. com.cleanup.todoc.injections.ViewModelFactory
androidx.room.RoomDatabase <|-- com.cleanup.todoc.database.dao.TodocDatabase
@enduml